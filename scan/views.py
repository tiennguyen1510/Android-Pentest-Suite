from django.http import HttpResponse
from django.http import JsonResponse
from django.shortcuts import render
import subprocess
import utils.report_handle as report_handle
import utils.common as common
from report.models import ReportQark, ReportDc, ReportSniffgit, ReportAndro, ReportDbParser
import sqlite3

"""
danh sach tools
"""
def scan_tools(request, app_name):
    # pull file apk tu dien thoai
    common.pull_apk(app_name)
    return render(request, 'list_tools.html', {
        'app_name': app_name
    })



"""
su dung tool qark
"""
def tool_qark(request, app_name):
    try:
        common.use_tool(app_name, '0')
    except:
        pass

    return render(request, 'tool_qark.html', {
        'app_name': app_name,
        'high_list': ReportQark.objects.filter(severity='VULNERABILITY'),
        'medium_list': ReportQark.objects.filter(severity='WARNING'),
        'low_list': ReportQark.objects.filter(severity='INFO')
    })


"""
su dung tool sniffgit
"""
def tool_sniffgit(request, app_name):
    try:
        common.use_tool(app_name, '2')
    except:
        pass

    return render(request, 'tool_sniffgit.html', {
        'app_name': app_name,
        'sniffgit_reports': ReportSniffgit.objects.all()
    })


"""
su dung tool Androg Bugs
"""
def tool_andro(request, app_name):
    try:
        common.use_tool(app_name, '3')
    except:
        pass
    
    return render(request, 'tool_andro.html', {
        'app_name': app_name,
        'high_list': ReportAndro.objects.filter(severity='Critical'),
        'medium_list': ReportAndro.objects.filter(severity='Warning'),
        'low_list': ReportAndro.objects.filter(severity='Info')
    })


"""
su dung tool Dependency Check
"""
def tool_dc(request, app_name):
    try:
        common.use_tool(app_name, '1')
    except:
        pass
    
    return render(request, 'tool_dc.html', {
        'app_name': app_name,
        'high_list': ReportDc.objects.filter(severity='HIGH'),
        'medium_list': ReportDc.objects.filter(severity='MEDIUM'),
        'low_list': ReportDc.objects.filter(severity='LOW')
    })



"""
su dung tung dbParser
"""
def tool_dbparser(request, app_name):
    try:
        common.use_tool(app_name, '4')
    except:
        pass
    
    dbparser_reports = []
    for report in ReportDbParser.objects.all():
        file_path = report.file_path
        idx = report.id
        
        # lay cac table trong file db
        con = sqlite3.connect(file_path)
        cursorObj = con.cursor()
        cursorObj.execute("SELECT name FROM sqlite_master WHERE type='table';")
        table_names = []
        for table_name in cursorObj.fetchall():
            table_name = str(table_name).replace("(u'", "")
            table_name = str(table_name).replace("',)", "")
            table_names.append(str(table_name).strip())

        dbparser_reports.append({'id': idx, 'file_path': file_path, 'file_list': table_names})

    return render(request, 'tool_dbparser.html', {
        'app_name': app_name,
        'dbparser_reports': dbparser_reports
    })



def dbparser_detail(request, app_name, id, table_name):
    dbparser = ReportDbParser.objects.get(id=id)
    
    con = sqlite3.connect(dbparser.file_path)
    cursorObj = con.cursor()
    cursorObj.execute("SELECT * FROM " + table_name + " where 1 = 0;")
    fields = []
    for des in cursorObj.description:
        fields.append(des[0])    
    con.close()
    
    con = sqlite3.connect(dbparser.file_path)
    cursorObj = con.cursor()
    cursorObj.execute("SELECT * FROM " + table_name + ";")
    all_rows = cursorObj.fetchall()

    return render(request, 'tool_dbparser_detail.html', {
        'app_name': app_name,
        'table_name': table_name,
        'fields' : fields,
        'rows' : all_rows
    }) 




"""
su dung tat ca tool cho 1 apk
"""
def all_tool(request, app_name):
    common.run_all_tool(app_name)
    
    return render(request, 'list_tools.html', {
        'app_name' : app_name,
        'scan_message' : True
    })



"""
scan het tat ca cac apk voi tat ca cac tool, vao man hinh chart report
"""
def all_app(request):
    app_list = common.get_app_list()
    for app_name in app_list:
        try:
            # pull file apk tu dien thoai
            common.pull_apk(app_name)
            common.run_all_tool(app_name)
        except:
            pass

    # end for
    return render(request, 'list.html', {
        'app_list': app_list,
        'scan_message' : True
    })




"""
su dung tung tool
"""
def scan_tool(request, app_name, tool_index):
    reports = []

    # common.use_tool --> save db
    try:
        common.use_tool(app_name, tool_index)
    except:
        pass
    # get all reports from all reports table

    return render(request, 'scan_one.html', {'data': {
        'app_name': app_name,
        'toolList': common.get_tool_list(),
        'qark_reports': ReportQark.objects.all(),
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})


"""
khi ket noi, hien thi thong tin co ban va danh sach cac ung dung
"""
def connect(request, method, ip):
    # ket qua ket noi
    isSuccess = True
    # thong tin dien thoai
    phone_infos = []
    app_list = []

    if method == '1':
        try:
            subprocess.check_output(["adb", "connect", ip])
        except:
            pass
    else:
        pass    # method == 0 -> usb

    # ket qua ket noi
    connectResult = subprocess.check_output(["adb", "get-state"])
    if connectResult.strip() == "device":
        # xoa resource cu
        common.delete_old_resource()
        isSuccess = True
        # lay thong tin co ban cua dien thoai
        phone_infos = subprocess.check_output(
            ["sh", "scripts/get_phone_info.sh"])
        phone_infos = phone_infos.splitlines()
        request.session['phone_infos'] = phone_infos
        # lay danh sach app cua dien thoai
        subprocess.check_output(["sh", "scripts/get_app_list.sh"])
        app_list = common.get_app_list()
        request.session['app_list'] = app_list
    else:
        isSuccess = False

    # ket qua tra ve
    data = {'success': isSuccess,
            'phone_infos': phone_infos, 'app_list': app_list}
    return JsonResponse(data)


"""
hien thi report khi nhan tung nut
"""
def scan_one(request, app_name):
    # pull file apk tu dien thoai
    common.pull_apk(app_name)
    return render(request, 'scan_one.html', {'data': {
        'app_name': app_name,
        'toolList': common.get_tool_list(),
        'qark_reports': ReportQark.objects.all(),
        'dc_reports': ReportDc.objects.all(),
        'sniffgit_reports': ReportSniffgit.objects.all(),
        'andro_reports': report_handle.handle_andro_report(app_name)
    }})
